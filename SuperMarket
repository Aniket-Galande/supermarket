import java.util.Arrays;
import java.util.Scanner;

public class SuperMarket {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        // Read input
        int n = scanner.nextInt(); // Number of customers
        int m = scanner.nextInt(); // Number of rice bags

        int[][] customerPreferences = new int[n][2];
        for (int i = 0; i < n; i++) {
            customerPreferences[i][0] = scanner.nextInt(); // Customer's quantity preference
            customerPreferences[i][1] = scanner.nextInt(); // Customer's cost preference
        }

        int[][] riceBags = new int[m][2];
        for (int i = 0; i < m; i++) {
            riceBags[i][0] = scanner.nextInt(); // Rice bag quantity
            riceBags[i][1] = scanner.nextInt(); // Rice bag cost
        }

        // Close the scanner
        scanner.close();

        // Find the maximum number of bags that can be sold
        int maxBagsSold = findMaxBagsSold(customerPreferences, riceBags);

        // Print the result
        System.out.print(maxBagsSold);
    }

    private static int findMaxBagsSold(int[][] customerPreferences, int[][] riceBags) {
        int maxBagsSold = 0;

        // Sort rice bags based on cost in ascending order
        Arrays.sort(riceBags, (a, b) -> Integer.compare(a[1], b[1]));

        // Iterate through each rice bag
        for (int i = 0; i < riceBags.length; i++) {
            int bagQuantity = riceBags[i][0];
            int bagCost = riceBags[i][1];

            // Iterate through each customer preference
            for (int j = 0; j < customerPreferences.length; j++) {
                int customerQuantityPref = customerPreferences[j][0];
                int customerCostPref = customerPreferences[j][1];

                // Check if the rice bag matches the customer's preference
                if (bagCost <= customerCostPref && bagQuantity >= customerQuantityPref) {
                    maxBagsSold++;
                    break;
                }
            }
        }

        return maxBagsSold;
    }
}
 
